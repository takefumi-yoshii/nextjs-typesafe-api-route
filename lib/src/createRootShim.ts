import * as ts from "typescript";
import { factory } from "typescript";
// ______________________________________________________
//
export const createRootShim = (moduleNameSpaece: string) => [
  factory.createImportDeclaration(
    undefined,
    undefined,
    factory.createImportClause(
      true,
      undefined,
      factory.createNamedImports([
        factory.createImportSpecifier(
          false,
          undefined,
          factory.createIdentifier("NextApiRequest")
        ),
        factory.createImportSpecifier(
          false,
          undefined,
          factory.createIdentifier("NextApiResponse")
        ),
      ])
    ),
    factory.createStringLiteral("next"),
    undefined
  ),
  factory.createModuleDeclaration(
    undefined,
    [factory.createModifier(ts.SyntaxKind.DeclareKeyword)],
    factory.createStringLiteral(moduleNameSpaece),
    factory.createModuleBlock([
      factory.createTypeAliasDeclaration(
        undefined,
        [factory.createModifier(ts.SyntaxKind.ExportKeyword)],
        factory.createIdentifier("ApiHandler"),
        [
          factory.createTypeParameterDeclaration(
            factory.createIdentifier("T"),
            undefined,
            factory.createKeywordTypeNode(ts.SyntaxKind.UnknownKeyword)
          ),
          factory.createTypeParameterDeclaration(
            factory.createIdentifier("Q"),
            undefined,
            factory.createKeywordTypeNode(ts.SyntaxKind.UnknownKeyword)
          ),
          factory.createTypeParameterDeclaration(
            factory.createIdentifier("B"),
            undefined,
            factory.createKeywordTypeNode(ts.SyntaxKind.AnyKeyword)
          ),
        ],
        factory.createFunctionTypeNode(
          undefined,
          [
            factory.createParameterDeclaration(
              undefined,
              undefined,
              undefined,
              factory.createIdentifier("req"),
              undefined,
              factory.createIntersectionTypeNode([
                factory.createTypeReferenceNode(
                  factory.createIdentifier("Omit"),
                  [
                    factory.createTypeReferenceNode(
                      factory.createIdentifier("NextApiRequest"),
                      undefined
                    ),
                    factory.createUnionTypeNode([
                      factory.createLiteralTypeNode(
                        factory.createStringLiteral("body")
                      ),
                      factory.createLiteralTypeNode(
                        factory.createStringLiteral("query")
                      ),
                    ]),
                  ]
                ),
                factory.createTypeLiteralNode([
                  factory.createPropertySignature(
                    undefined,
                    factory.createIdentifier("query"),
                    undefined,
                    factory.createTypeReferenceNode(
                      factory.createIdentifier("Partial"),
                      [
                        factory.createTypeReferenceNode(
                          factory.createIdentifier("Q"),
                          undefined
                        ),
                      ]
                    )
                  ),
                  factory.createPropertySignature(
                    undefined,
                    factory.createIdentifier("body"),
                    factory.createToken(ts.SyntaxKind.QuestionToken),
                    factory.createTypeReferenceNode(
                      factory.createIdentifier("B"),
                      undefined
                    )
                  ),
                ]),
              ]),
              undefined
            ),
            factory.createParameterDeclaration(
              undefined,
              undefined,
              undefined,
              factory.createIdentifier("res"),
              undefined,
              factory.createTypeReferenceNode(
                factory.createIdentifier("NextApiResponse"),
                [
                  factory.createUnionTypeNode([
                    factory.createTypeReferenceNode(
                      factory.createIdentifier("Data"),
                      [
                        factory.createTypeReferenceNode(
                          factory.createIdentifier("T"),
                          undefined
                        ),
                      ]
                    ),
                    factory.createTypeReferenceNode(
                      factory.createIdentifier("Error"),
                      undefined
                    ),
                  ]),
                ]
              ),
              undefined
            ),
          ],
          factory.createUnionTypeNode([
            factory.createKeywordTypeNode(ts.SyntaxKind.VoidKeyword),
            factory.createTypeReferenceNode(
              factory.createIdentifier("Promise"),
              [factory.createKeywordTypeNode(ts.SyntaxKind.VoidKeyword)]
            ),
          ])
        )
      ),
      factory.createTypeAliasDeclaration(
        undefined,
        undefined,
        factory.createIdentifier("ResBody"),
        [
          factory.createTypeParameterDeclaration(
            factory.createIdentifier("T"),
            undefined,
            undefined
          ),
        ],
        factory.createConditionalTypeNode(
          factory.createTypeReferenceNode(
            factory.createIdentifier("T"),
            undefined
          ),
          factory.createTypeReferenceNode(
            factory.createIdentifier("ApiHandler"),
            [
              factory.createInferTypeNode(
                factory.createTypeParameterDeclaration(
                  factory.createIdentifier("I"),
                  undefined,
                  undefined
                )
              ),
              factory.createKeywordTypeNode(ts.SyntaxKind.UnknownKeyword),
              factory.createKeywordTypeNode(ts.SyntaxKind.AnyKeyword),
            ]
          ),
          factory.createTypeReferenceNode(
            factory.createIdentifier("I"),
            undefined
          ),
          factory.createKeywordTypeNode(ts.SyntaxKind.NeverKeyword)
        )
      ),
      factory.createTypeAliasDeclaration(
        undefined,
        undefined,
        factory.createIdentifier("ReqQuery"),
        [
          factory.createTypeParameterDeclaration(
            factory.createIdentifier("T"),
            undefined,
            undefined
          ),
        ],
        factory.createConditionalTypeNode(
          factory.createTypeReferenceNode(
            factory.createIdentifier("T"),
            undefined
          ),
          factory.createTypeReferenceNode(
            factory.createIdentifier("ApiHandler"),
            [
              factory.createKeywordTypeNode(ts.SyntaxKind.UnknownKeyword),
              factory.createInferTypeNode(
                factory.createTypeParameterDeclaration(
                  factory.createIdentifier("I"),
                  undefined,
                  undefined
                )
              ),
              factory.createKeywordTypeNode(ts.SyntaxKind.AnyKeyword),
            ]
          ),
          factory.createTypeReferenceNode(
            factory.createIdentifier("I"),
            undefined
          ),
          factory.createKeywordTypeNode(ts.SyntaxKind.NeverKeyword)
        )
      ),
      factory.createTypeAliasDeclaration(
        undefined,
        undefined,
        factory.createIdentifier("ReqBody"),
        [
          factory.createTypeParameterDeclaration(
            factory.createIdentifier("T"),
            undefined,
            undefined
          ),
        ],
        factory.createConditionalTypeNode(
          factory.createTypeReferenceNode(
            factory.createIdentifier("T"),
            undefined
          ),
          factory.createTypeReferenceNode(
            factory.createIdentifier("ApiHandler"),
            [
              factory.createKeywordTypeNode(ts.SyntaxKind.UnknownKeyword),
              factory.createKeywordTypeNode(ts.SyntaxKind.UnknownKeyword),
              factory.createInferTypeNode(
                factory.createTypeParameterDeclaration(
                  factory.createIdentifier("I"),
                  undefined,
                  undefined
                )
              ),
            ]
          ),
          factory.createTypeReferenceNode(
            factory.createIdentifier("I"),
            undefined
          ),
          factory.createKeywordTypeNode(ts.SyntaxKind.NeverKeyword)
        )
      ),
      ...[
        "GetResBody",
        "GetReqQuery",
        "GetReqBody",
        "PostResBody",
        "PostReqQuery",
        "PostReqBody",
        "PutResBody",
        "PutReqQuery",
        "PutReqBody",
        "PatchResBody",
        "PatchReqQuery",
        "PatchReqBody",
        "DeleteResBody",
        "DeleteReqQuery",
        "DeleteReqBody",
      ].map((identifier) =>
        factory.createInterfaceDeclaration(
          undefined,
          undefined,
          factory.createIdentifier(identifier),
          undefined,
          undefined,
          []
        )
      ),
    ])
  ),
];
